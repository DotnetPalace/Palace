name: .NET

on:
  pull_request:
    branches: [ prod ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore palace.sln

    - name: Build Palace Client
      run: dotnet build src\Palace.Client\Palace.Client.csproj -c Release --no-restore

    - name: Pack Palace Client
      run: dotnet pack --no-build --configuration Release ${{github.workspace}}\src\Palace.Client\Palace.Client.csproj --output .

    - name: Push Nuget
      run: dotnet nuget push *.nupkg --source https://nuget.pkg.github.com/dotnetpalace/index.json --api-key ${{secrets.NUGET_GITHUB}} --skip-duplicate

    - name: Create Fake local AppSettings
      run: |
        echo {} > ${{github.workspace}}\localconfig\appsettings.json

    - name: Build Palace Host
      run: dotnet publish src\palace.host\palace.host.csproj -c Release --no-restore -v d

    - name: Zip Palace Host
      run: |
        cd ${{github.workspace}}\src\palace.host\bin\Release\net7.0\publish
        del appsettings.*.json
        7z.exe a -r -tzip ${{github.workspace}}\palacehost.zip * 

    - name: Build Palace Server
      run: |
        cd ${{github.workspace}}\src\palace.server
        dotnet publish -p:PublishProfile=Properties\PublishProfiles\FolderProfile.pubxml

    - name: Zip Palace Server
      run: |
        cd ${{github.workspace}}\src\palace.server\bin\Debug\net7.0\publish
        del appsettings.*.json
        7z.exe a -r -tzip ${{github.workspace}}\palaceserver.zip * 

    - name: Build Palace Deploy Cli
      run: dotnet publish src\PalaceDeployCli\PalaceDeployCli.csproj -c Release --no-restore -v d

    - name: Zip Palace Deploy Cli
      run: |
        cd ${{github.workspace}}\src\PalaceDeployCli\bin\Release\net7.0\publish
        del appsettings.*.json
        7z.exe a -r -tzip ${{github.workspace}}\palacedeploycli.zip * 
        
    - uses: dev-drprasad/delete-tag-and-release@v1.0
      with:
        delete_release: true # default: false
        tag_name: Latest # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with: 
        tag_name: Latest
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Palace
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}\palacehost.zip
        asset_name: palacehost.zip
        asset_content_type: application/zip

    - name: Upload Release PalaceServer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}\palaceserver.zip
        asset_name: palaceserver.zip
        asset_content_type: application/zip

    - name: Upload Release PalaceDeployCli
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}\palacedeploycli.zip
        asset_name: palacedeploycli.zip
        asset_content_type: application/zip
